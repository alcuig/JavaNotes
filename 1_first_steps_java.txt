First steps - Overview of : 
	Java keywords
	variables
	data types
	main method
	expressions
	operators and operands
	ternary operator 
	if-then statements
	primitive data types
	strings

---
Defining the main method
	
	public class Main {
    		public static void main(String[] args) {...

	public = access modifier, defines how other code can access your code
	class = class name follows the keyword (Hello in ex below). Curly brackets 
	to define class block 

	method = collection of statements that performs an operation
	main method = point of entry that Java looks for when running a program 
	void = keyword used to indicate that the method will not return any information 
	
	code block = used to define a code of block
	statement = complete command to be executed and can contain one or more expressions

public class Hello {
    public static void main (String[] args) {
        System.out.println("Hello World");

    }
}
---

What are variables?

	Variables are a way to store information on your computer.
	Variables that we define in a program can be accessed by a name we give them
	and the computer figures out where they get stored in the com's RAM.

	As its name suggests, its contents can be changed ie are variable.


What is a declaration statement? 

 	In Java, you must define the type of information that you want to store in the variable (data
	type) and then give it a name, and optionally add an expression to initialise the variable	
	with a value.

What is an expression? 

	A construct that evaluates to a single value. 


What are Java operators? 
	
	Perform an operation on a variable or value
	I.e. +, -, / and *


What are primitive types?
	
	In Java these are the most basic data types.
	They are the building blocks of data manipulation.
	There are 8 in total.
	Int, boolean, byte, char, short, long, float and double.	

	Difference in range of values that can be stored in each primitive type.
	I.e. int will allow for higher max/min values than byte.
	Byte will therefore limit amount of memory used by program --> better performance.


Overflow and Underflow 
	
	Overflow = if you try to put a value larger than the max value 
	Underflow = if you try to put a value smaller than the min value

	The com will skip back to the max or min number.


Size of primitive data types and width

	Each primitive type occupies a different amount of memory.
	This is called "width".
	For example, an int needs 4 times the amount of space that a byte does.
	
	A Byte occupies 8 bits.
	--> a Byte has a WIDTH of 8.
	
	A short can store a larger range of numbers.
	It occupies 16 bits. 
	--> a short has a WIDTH of 16. 

	An int has a larger range. 
	It occupes 32 bits.
	--> an int has a WIDTH of 32.

	Longs have the largest ranges of whole numbers primitive data types.
	It is double the width of an integer. 
	They have a WIDTH of 64.


Table of widths of different data types (bits and bytes)
TYPE	|	Byte	|	Short	|	Int	|	Long	|	Char	|
BITS	|	8	|	16	|	32	|	64	|	16	|
BYTES	|	1	|	2	|	4	|	8	|	2	|

*Larger width = more precision.	
	

Longs
	--> add an L at the end of a number for Java to treat it as a long

	Java will consider a number typed without an L at the end as an integer 
	This will prevent you from inserting values that are longer than the int max. 
	
	
 
Arithmetic and Casting
	
	Casting = to convert a number from one type to another.
	Put the data type you want to convert in parentheses before the targeted value
	It will then treat the number as whatever data type you specified before the parentheses. 
	ex:
	(byte) int_value -->it will treat the int as a byte instead.



Floating point numbers 
	
	Unlike whole numbers, floating point numbers have a fractional part.
	They are also known as real numbers.
	In Java they are expressed as float and double primitive types.


What is single and double precision?

	Precision = the format and amount of space occupied by the type.

	Single (float primitive type) precision occupies 32 bits (so has a width of 32 --> 4 bytes).
	Double precision occupies 64 bits (--> width 64 --> 8 bytes).

	--> The double has more precision than the float.

Floating point precision in decimal figures

DATA TYPE	|	Float	|	Double	|
PRECISION 	|	6	|	16	|

	A float will go up to 6 decimal figures
	Whereas a double will go up to 16 decimal figures
	--> double more precise than float.

	Given the fact that double takes up double the amount of space, it's a double precision
	compared to the float which is a single precision number. 

	However the double is the preferred primitive data type in this case:
	- It's faster to process on modern computers 
	because computers at chip level have the functionality to deal with the double numbers faster
	than the float
	- The java libraries of the math functions are written to process and return doubles 
	and not floats.
	- Java treats double as the default float number.

Floating Point Number Precision Tips

	Where precise calculations are required, use BigDecimal ie for currency calculations		
	But for general calculations float and double can be used	

Char and Boolean data types 

	What is a Char data type?
	Char is similar to string type in that you can store characters
	BUT for char data types you can only store a single character 

	Occupies 2 bytes of memory I.e. 16 bits 
	--> has a WIDTH of 16
	reason it is not a single bit is that it allows you to store Unicode characters

	What is Unicode?
	It is an international coding standard used with different languages and scripts
	Each letter, digit , symbol is assigned a unique numeric value that applies across different
	platforms and programs

	What is a Boolean data type?
	Allows for two values True or False, Yes or No, 1 or 0

Primitive data types recap 
	Most common primitive data types: Int, Double, Boolean 
	Sometimes might need long or char, but not often
	Short and Float are rarely used
	Primitive data types are built into the Java programming language 
	There's a way to create your own data types, which in Java are called classes

Primitive data types according to frequency of use

MOST USED	| Int (default whole number)	| Double (default float)| Boolean	|		
SOMETIMES USED	| Long				| Char			| 
LEAST USED 	| Short				| Float			|


String data type
	A data type in Java which is not a primitive data type 
	It's actually a Class
	But is easier to use than a regular Class
	It is a sequence of characters
	
	Numbers with Strings
	Numbers treated as textual representations, not numbers i.e. no calculations 
	will be performed
	
	If you add an Int data type to a String, Java will cover the Int to its textual
	representation I.e. cover it to a string

	Strings in Java are immutable 
	--> you can't change a string after its created 
	--> instead, when you add a different portion of string within a previously 
	existing string variable, a new string will be created
	--> and the old one will be discarded
	--> thus appending strings in this way is inefficient, 
	using StringBuffer instead is recommended

Operators, operands and expressions
	
	What are operators? 
	In Java, these are special symbols that perform specific operations on one, 
	two or three operands, and then return a result

	What is an expression?
	Is formed by combining variables, literals, return method values and operators 
		example: 
		double mySalary = hoursWorked * hourlyRate; 
		expression here is hoursWorked * hourlyRate
	
	What are comments?
	Comments are ignored by the computer and are added to a program to help describe something.
	Comments are for humans.
	In Java --> //

Abbreviating Operators
	

If-then statements 
	Is the most basic of control flow statements 
	It tells you to execute a certain section of code only if a particular test 
	evaluates to true
	This is known as CONDITIONAL LOGIC

	What is CONDITIONAL LOGIC? 
	Conditional logic uses specific statements in Java to allow us to check a condition and
	execute certain code based on whether that condition (the expression) is true or false. 

	If-then rule : always use a code block
	--> it allows you to use more than one statement.  

	if (expression) {
		// put one or more statements here
	}

Logical "and" Operator

	represented as && in Java.

Logical "or" Operator
	
	represented as "||" in Java
	only requires ONE of the left or right operand conditions to be true
	whereas and requires BOTH left and right operand conditions to be true 


Boolean abbreviations
	
	You can simplify boolean if statements

	instead of if (isCar == true)--> remove the == true
	--> if (isCar)

	instead of if (isCar == false) --> remove the == false and replace with not
	--> if (not isCar)


The NOT Operator 
	The ! Or NOT Operator is also known as the Logical Complement Operator 
	For use with booleans, it tests the alternate value

	if (!isCar) to check if the boolean isCar is false 
	--> more concise than == false
	

Ternary Operator?
 
	ternary --> takes 3 operands
	operand 1 : the condition we're testing
	operand 2 : the value to assign if the condition true 
	operand 3 : the value to assign if the condition is false

	ex : 
	boolean wasCar = isCar ? true : false;
			  op 1    op2.   op3

Operator Precedence
	https://www.cs.bilkent.edu.tr/~guvenir/courses/CS101/op_precedence.html


